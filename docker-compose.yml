version: '3.8'

services:
  voltagegpu-bot:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: voltagegpu-twitter-bot
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Override any environment variables if needed
      - TIMEZONE=${TIMEZONE:-Europe/Paris}
      - DAILY_WRITES_TARGET_PER_ACCOUNT=${DAILY_WRITES_TARGET_PER_ACCOUNT:-10}
      - POST_WINDOW_LOCAL=${POST_WINDOW_LOCAL:-09:00-23:30}
      - ACCOUNT_ORDER=${ACCOUNT_ORDER:-A_FIRST}
      - MIN_GAP_BETWEEN_ACCOUNTS_MIN=${MIN_GAP_BETWEEN_ACCOUNTS_MIN:-45}
      - INTERVAL_MIN=${INTERVAL_MIN:-90}
    volumes:
      # Persist database and logs
      - ./data:/app/data
      # Allow hot-reload during development (optional)
      - ./app:/app/app:ro
    ports:
      # Status tracker API
      - "8000:8000"
    networks:
      - bot-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a monitoring service
  prometheus:
    image: prom/prometheus:latest
    container_name: voltagegpu-prometheus
    restart: unless-stopped
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - "9090:9090"
    networks:
      - bot-network
    profiles:
      - monitoring

  # Optional: Add Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: voltagegpu-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    ports:
      - "3000:3000"
    networks:
      - bot-network
    depends_on:
      - prometheus
    profiles:
      - monitoring

networks:
  bot-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
